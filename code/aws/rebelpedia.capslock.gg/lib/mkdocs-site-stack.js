"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MkDocsSiteStack = void 0;
const aws_cdk_lib_1 = require("aws-cdk-lib");
const distribution_construct_1 = require("./distribution-construct");
const github_actions_construct_1 = require("./github-actions-construct");
const route_construct_1 = require("./route-construct");
class MkDocsSiteStack extends aws_cdk_lib_1.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        const { domainName, sites } = props;
        const route = new route_construct_1.RouteConstruct(this, `Route`, { domainName, subDomains: sites });
        const zone = route.zone;
        const certificate = route.certificate;
        const distributions = sites.map(dist => (new distribution_construct_1.DistributionConstruct(this, `Dist${dist}`, { domainName, subDomain: dist, zone, certificate })));
        // Creates a user with role that is allowed to putObject to all buckets
        new github_actions_construct_1.GithubActionsConstruct(this, 'GithubActions', { bucketArns: distributions.map(dist => dist.bucketArn) });
    }
}
exports.MkDocsSiteStack = MkDocsSiteStack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWtkb2NzLXNpdGUtc3RhY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJta2RvY3Mtc2l0ZS1zdGFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw2Q0FBZ0Q7QUFFaEQscUVBQWlFO0FBQ2pFLHlFQUFvRTtBQUNwRSx1REFBbUQ7QUFNbkQsTUFBYSxlQUFnQixTQUFRLG1CQUFLO0lBQ3hDLFlBQVksS0FBZ0IsRUFBRSxFQUFVLEVBQUUsS0FBc0I7UUFDOUQsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFeEIsTUFBTSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsR0FBRyxLQUFLLENBQUM7UUFFcEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxnQ0FBYyxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDbkYsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQztRQUN4QixNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDO1FBR3RDLE1BQU0sYUFBYSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksOENBQXFCLENBQUMsSUFBSSxFQUFFLE9BQU8sSUFBSSxFQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFOUksdUVBQXVFO1FBQ3ZFLElBQUksaURBQXNCLENBQUMsSUFBSSxFQUFFLGVBQWUsRUFBRSxFQUFFLFVBQVUsRUFBRSxhQUFhLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUMvRyxDQUFDO0NBQ0Y7QUFoQkQsMENBZ0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RhY2ssIFN0YWNrUHJvcHMgfSBmcm9tICdhd3MtY2RrLWxpYic7XG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdjb25zdHJ1Y3RzJztcbmltcG9ydCB7IERpc3RyaWJ1dGlvbkNvbnN0cnVjdCB9IGZyb20gJy4vZGlzdHJpYnV0aW9uLWNvbnN0cnVjdCc7XG5pbXBvcnQgeyBHaXRodWJBY3Rpb25zQ29uc3RydWN0IH0gZnJvbSAnLi9naXRodWItYWN0aW9ucy1jb25zdHJ1Y3QnO1xuaW1wb3J0IHsgUm91dGVDb25zdHJ1Y3QgfSBmcm9tICcuL3JvdXRlLWNvbnN0cnVjdCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWtEb2NzU2l0ZVByb3BzIGV4dGVuZHMgU3RhY2tQcm9wcyB7XG4gIGRvbWFpbk5hbWU6IHN0cmluZztcbiAgc2l0ZXM6IHN0cmluZ1tdO1xufVxuZXhwb3J0IGNsYXNzIE1rRG9jc1NpdGVTdGFjayBleHRlbmRzIFN0YWNrIHtcbiAgY29uc3RydWN0b3Ioc2NvcGU6IENvbnN0cnVjdCwgaWQ6IHN0cmluZywgcHJvcHM6IE1rRG9jc1NpdGVQcm9wcykge1xuICAgIHN1cGVyKHNjb3BlLCBpZCwgcHJvcHMpO1xuXG4gICAgY29uc3QgeyBkb21haW5OYW1lLCBzaXRlcyB9ID0gcHJvcHM7XG5cbiAgICBjb25zdCByb3V0ZSA9IG5ldyBSb3V0ZUNvbnN0cnVjdCh0aGlzLCBgUm91dGVgLCB7IGRvbWFpbk5hbWUsIHN1YkRvbWFpbnM6IHNpdGVzIH0pO1xuICAgIGNvbnN0IHpvbmUgPSByb3V0ZS56b25lO1xuICAgIGNvbnN0IGNlcnRpZmljYXRlID0gcm91dGUuY2VydGlmaWNhdGU7XG4gICAgXG4gICAgXG4gICAgY29uc3QgZGlzdHJpYnV0aW9ucyA9IHNpdGVzLm1hcChkaXN0ID0+IChuZXcgRGlzdHJpYnV0aW9uQ29uc3RydWN0KHRoaXMsIGBEaXN0JHtkaXN0fWAsIHsgZG9tYWluTmFtZSwgc3ViRG9tYWluOiBkaXN0LCB6b25lLCBjZXJ0aWZpY2F0ZSB9KSkpO1xuICAgIFxuICAgIC8vIENyZWF0ZXMgYSB1c2VyIHdpdGggcm9sZSB0aGF0IGlzIGFsbG93ZWQgdG8gcHV0T2JqZWN0IHRvIGFsbCBidWNrZXRzXG4gICAgbmV3IEdpdGh1YkFjdGlvbnNDb25zdHJ1Y3QodGhpcywgJ0dpdGh1YkFjdGlvbnMnLCB7IGJ1Y2tldEFybnM6IGRpc3RyaWJ1dGlvbnMubWFwKGRpc3QgPT4gZGlzdC5idWNrZXRBcm4pIH0pO1xuICB9XG59XG4iXX0=